{"version":3,"sources":["components/Layout/Layout.module.scss","scenes/Dashboard/scenes/NoteView/components/BlockView/BlockView.module.scss","tools/Log.js","tools/tree.ts","types/note.ts","components/Tree/TreeMenu.tsx","components/Layout/components/NotesTree/NotesTree.tsx","store/types/ui.ts","store/actions/ui.ts","components/Layout/Layout.tsx","store/types/note.ts","components/Header/Header.tsx","store/actions/note.ts","components/Button/Button.tsx","components/Link/Link.tsx","components/Image/ImageInput.tsx","components/NoteLinkButton/NoteLinkButton.tsx","components/NoteLink/NoteLink.tsx","components/NoteLink/tools.ts","components/Modal/Modal.tsx","components/Video/VideoInput.tsx","components/Editor/TextEditor.tsx","components/Table/TableEditor.tsx","forms/NoteForm/NoteForm.tsx","scenes/Dashboard/scenes/NoteEdit/NoteEdit.tsx","scenes/Dashboard/scenes/NoteView/components/BlockView/BlockView.tsx","forms/BlockForm/components/Switcher.tsx","forms/BlockForm/BlockForm.tsx","scenes/Dashboard/scenes/NoteView/components/TypeSwitcher/TypeSwitcher.tsx","store/types/block.ts","scenes/Dashboard/scenes/NoteView/NoteView.tsx","store/actions/block.ts","forms/SectionForm/SectionForm.tsx","store/types/section.ts","scenes/Dashboard/scenes/SectionCreate/SectionCreate.tsx","store/actions/section.ts","scenes/Dashboard/scenes/SectionView/SectionView.tsx","scenes/Dashboard/Dashboard.tsx","scenes/Root.tsx","store/reducers/ui.ts","store/reducers/block.ts","store/reducers/note.ts","store/reducers/section.ts","store/reducers/index.ts","store/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","logger","level","LOG_LEVEL","Object","freeze","NONE","ERROR","WARN","INFO","nopLogger","log","warn","error","Log","value","args","Array","from","reset","getNoteUrl","uri","id","CREATE_NOTE","EDIT_NOTE","CREATE_SECTION","Menu","tree","history","useHistory","handleMenuItemClick","useCallback","key","props","label","isSection","path","push","data","onClickItem","hasSearch","length","search","items","defaultChildren","NotesTree","sections","map","section","title","nodes","filter","note","sectionId","readSectionsTemplate","useSelector","state","notes","ACTIVATE","DEACTIVATE","DEACTIVATE_ALL","activate","flowName","type","payload","deactivateAll","Layout","children","dispatch","useDispatch","className","styles","container","menu","size","onClick","content","CREATE","UPDATE","DELETE","Header","useLocation","pathname","noteId","checkSection","exec","String","checkNote","Button","primary","backgroundColor","mode","join","style","Link","onChange","initialContent","ImageInput","NoteLinkButton","item","handleClick","NoteLink","options","useState","selectedOption","setSelectedOption","defaultValue","option","Modal","visible","footer","onClose","onKeydown","React","useEffect","document","addEventListener","removeEventListener","e","stopPropagation","VideoInput","TextEditor","editorRef","useRef","setContent","onInit","evt","editor","current","initialValue","getContent","init","height","menubar","plugins","toolbar","content_style","TableEditor","NoteForm","onFinish","initialData","setTitle","setUri","onSubmit","preventDefault","cuid","name","required","target","NoteEdit","isEditFlow","ui","flows","flow","isEdit","undefined","create","BlockView","block","Switcher","handleChange","event","BlockForm","TYPES","TypeSwitcher","toLowerCase","initial","CREATE_BLOCK","UPDATE_BLOCK","DELETE_BLOCK","NoteView","blocks","setType","isActiveBlockForm","setActive","currentBlock","setBlock","showBlockForm","handleDelete","remove","order","handleEdit","SectionForm","DELETE_SECTION","SectionCreate","SectionView","Dashboard","isSectionFlowActive","includes","isNoteFlowActive","handleClose","Main","component","to","initialState","rootReducer","combineReducers","action","persistConfig","storage","LocalStorage","stateReconciler","hardSet","persistedReducer","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","console","AppFn","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.e0eb7241.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__2n0Rd\",\"content\":\"Layout_content__3RO9R\",\"menu\":\"Layout_menu__2w9TM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"BlockView_block__14lQO\"};","export const LOG_LEVEL = Object.freeze({\n  NONE: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n});\n\nconst nopLogger = {\n  log() {},\n  warn() {},\n  error() {},\n};\n\nlet logger;\nlet level;\n\nexport class Log {\n  static reset() {\n    level = LOG_LEVEL.INFO;\n    logger = nopLogger;\n  }\n\n  static get level() {\n    return level;\n  }\n\n  static set level(value) {\n    level = value;\n  }\n\n  static get logger() {\n    return logger;\n  }\n\n  static set logger(value) {\n    logger = value;\n  }\n\n  static log(...args) {\n    if (level >= LOG_LEVEL.INFO) {\n      logger.log(...Array.from(args));\n    }\n  }\n\n  static warn(...args) {\n    if (level >= LOG_LEVEL.WARN) {\n      logger.warn(...Array.from(args));\n    }\n  }\n\n  static error(...args) {\n    if (level >= LOG_LEVEL.ERROR) {\n      logger.error(...Array.from(args));\n    }\n  }\n}\n\nLog.reset();\n","import { Note, Section } from 'types';\r\n\r\nexport const getNoteUrl = (value: Note) => {\r\n  return value.uri !== '' && value.uri ? value.uri : value.id;\r\n};\r\n\r\nexport const readSectionsTemplate = (sections: Section[], items: Note[]) => {\r\n  return sections.map(section => {\r\n    return {\r\n      key: section.id,\r\n      label: section.title,\r\n      isSection: true,\r\n      nodes: items.filter(note => note.sectionId === section.id).map((note) => {\r\n        return { key: getNoteUrl(note), label: note.title, path:  getNoteUrl(note)};\r\n      }),\r\n    };\r\n  });\r\n};\r\n\r\nexport const readNotesTemplate = (items: Note[]) => {\r\n  return items.map((value => {\r\n    return { key: getNoteUrl(value), label: value.title };\r\n  }));\r\n};\r\n","export type MediaType =\n  | 'VIDEO'\n  | 'LINK'\n  | 'TEXT'\n  | 'IMAGE'\n  | 'TABLE'\n\nexport interface Section {\n  id: string;\n  title: string;\n}\n\nexport interface Note {\n  id: string;\n  title: string;\n  sectionId: Section['id'];\n  uri?: string;\n}\n\nexport interface Block {\n  id: string;\n  noteId: Note['id'];\n  order: number;\n  type: MediaType;\n  content: string;\n}\n\nexport const CREATE_NOTE = 'createNote';\nexport const EDIT_NOTE = 'editNote';\nexport const CREATE_SECTION = 'createSection';\n","import TreeMenu, { defaultChildren } from 'react-simple-tree-menu';\n\nimport 'react-simple-tree-menu/dist/main.css';\nimport { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport interface TreeProps {\n  tree: any;\n}\n\nexport const Menu = ({ tree }: TreeProps) => {\n  const history = useHistory();\n\n  const handleMenuItemClick = useCallback(\n    ({ key, label, ...props }) => {\n      const { isSection, path } = props;\n\n      if (isSection) history.push(`/section/${key}`);\n      else history.push(`/note/${path}`);\n\n    },\n    [history],\n  );\n\n  return <TreeMenu data={tree}\n                   onClickItem={handleMenuItemClick} hasSearch={tree.length > 0}>\n    {({ search, items }) => (\n      <div>\n        {defaultChildren({ search, items })}\n      </div>\n    )}\n  </TreeMenu>;\n};\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Menu } from 'components/Tree';\r\nimport { Note, RootState, Section } from 'types';\r\nimport { readSectionsTemplate } from 'tools';\r\n\r\n\r\nexport const NotesTree = () => {\r\n  const sections = useSelector<RootState, Section[]>((state) => state.section.sections || []);\r\n  const notes = useSelector<RootState, Note[]>((state) => state.note.notes || []);\r\n  const tree = readSectionsTemplate(sections, notes);\r\n\r\n  return <Menu tree={tree} />;\r\n};\r\n\r\n\r\n","export const ACTIVATE = 'ACTIVATE';\r\nexport const DEACTIVATE = 'DEACTIVATE';\r\nexport const DEACTIVATE_ALL = 'DEACTIVATE_ALL';\r\n","import { ACTIVATE, DEACTIVATE, DEACTIVATE_ALL } from '../types/ui';\r\n\r\nexport const activate = (flowName: string) => {\r\n  return {\r\n    type: ACTIVATE,\r\n    payload: flowName,\r\n  };\r\n};\r\n\r\nexport const deactivate = (flowName: string) => {\r\n  return {\r\n    type: DEACTIVATE,\r\n    payload: flowName,\r\n  };\r\n};\r\n\r\n\r\nexport const deactivateAll = () => {\r\n  return {\r\n    type: DEACTIVATE_ALL,\r\n    payload: null,\r\n  };\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Header, Button } from 'components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NotesTree } from './components';\r\nimport { CREATE_NOTE, CREATE_SECTION } from 'types';\r\nimport { activate } from 'store/actions/ui';\r\n\r\nimport styles from './Layout.module.scss';\r\n\r\n\r\nconst LayoutFn: FC = ({ children }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCreateNote = () => {\r\n    dispatch(activate(CREATE_NOTE));\r\n  };\r\n\r\n  const handleCreateSection = () => {\r\n    dispatch(activate(CREATE_SECTION));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div id='menu' className={styles.menu}>\r\n        <Button size='small' onClick={handleCreateNote} label='Create new note' />\r\n        <Button size='small' onClick={handleCreateSection} label='Create new section' />\r\n        <NotesTree />\r\n      </div>\r\n      <div id='content' className={styles.content}>\r\n        <Header />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Layout = LayoutFn;\r\n","export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button } from 'components';\r\nimport { EDIT_NOTE, Note, RootState, Section } from 'types';\r\nimport { activate } from 'store/actions/ui';\r\nimport { remove } from 'store/actions/note';\r\n\r\nimport './header.css';\r\n\r\ninterface HeaderProps {\r\n  title?: string;\r\n}\r\n\r\nexport const Header = ({ title }: HeaderProps) => {\r\n  const location = useLocation();\r\n  const path = location.pathname\r\n\r\n  let sectionId: Section['id'] = '';\r\n  let noteId: Note['id'] = '';\r\n\r\n  const checkSection = /section\\/(.+)/i.exec(path);\r\n\r\n  if (checkSection) {\r\n    sectionId = String(checkSection[1]);\r\n  }\r\n\r\n  const checkNote = /note\\/(.+)/i.exec(path);\r\n\r\n  if (checkNote) {\r\n    noteId = String(checkNote[1]);\r\n  }\r\n\r\n  const section  = useSelector<RootState, Section[]>((state) => state.section.sections.filter((section) => section.id === sectionId))[0];\r\n  const note = useSelector<RootState, Note[]>((state) => state.note.notes.filter((note) => note.id === noteId || note.uri === noteId))[0];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCreate = () => {\r\n    dispatch(activate(EDIT_NOTE));\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    dispatch(remove(note.id));\r\n  };\r\n\r\n  if (!title && (note || section)) {\r\n    title = note?.title || section?.title;\r\n  }\r\n\r\n  return <header>\r\n    {!!title ? (\r\n        <div className='wrapper'>\r\n          <h1>{title}</h1>\r\n          <Button size='small' onClick={handleCreate} label='Edit' />\r\n          <Button label={'Delete'} onClick={handleDelete} />\r\n        </div>) :\r\n      <h1>Create note to start</h1>\r\n    }\r\n\r\n  </header>;\r\n};\r\n","import { CREATE, UPDATE, DELETE } from '../types/note';\nimport { Note } from 'types';\n\nexport const create = (data: Note) => {\n  return {\n    type: CREATE,\n    payload: data,\n  };\n};\n\nexport const update = (data: Note) => {\n  return {\n    type: UPDATE,\n    payload: data,\n  };\n};\n\nexport const remove = (id: Note['id']) => {\n  return {\n    type: DELETE,\n    payload: id,\n  };\n};\n","import React from 'react';\nimport './button.css';\n\ninterface ButtonProps {\n  primary?: boolean;\n  backgroundColor?: string;\n  size?: 'small' | 'medium' | 'large';\n  label: string;\n  onClick?: () => void;\n}\n\nexport const Button = ({\n                         primary = false,\n                         size = 'medium',\n                         backgroundColor,\n                         label,\n                         ...props\n                       }: ButtonProps) => {\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return (\n    <button\n      type='button'\n      className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n      style={{ backgroundColor }}\n      {...props}\n    >\n      {label}\n    </button>\n  );\n};\n","import React from 'react';\r\nimport { VoidWithArgsFn } from '../../types';\r\n\r\n\r\ninterface LinkInputProps {\r\n  onChange: VoidWithArgsFn;\r\n  initialContent?: any;\r\n}\r\n\r\nexport const Link = ({ onChange, initialContent }: LinkInputProps) => {\r\n  return (\r\n    <input type='url' onChange={onChange} value={initialContent} />\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Link } from 'components/Link';\r\nimport { VoidWithArgsFn } from '../../types';\r\n\r\ninterface ImageInputProps {\r\n  onChange: VoidWithArgsFn;\r\n  initialContent?: any;\r\n}\r\n\r\nexport const ImageInput = ({ onChange, initialContent }: ImageInputProps) => {\r\n  // TODO: add spinner and validator\r\n  return (\r\n      <Link onChange={onChange} initialContent={initialContent}/>\r\n  );\r\n};\r\n","import { Note, RootState } from 'types';\r\nimport { Button } from '../Button';\r\nimport { readNotesTemplate } from '../../tools';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\ntype LinkItem = {\r\n  key: string,\r\n  label: string,\r\n}\r\n\r\ntype NoteLinkProps = {\r\n  noteId: Note['id'];\r\n}\r\n\r\nexport const NoteLinkButton = ({noteId}: NoteLinkProps) => {\r\n  const note = useSelector<RootState, Note[]>((state) => state.note.notes.filter((item) => item.id === noteId))[0];\r\n  const history = useHistory();\r\n  const item: LinkItem = readNotesTemplate([note])[0];\r\n\r\n  const handleClick = useCallback(\r\n    () => {\r\n      history.push(`/note/${item.key}`);\r\n    },\r\n    [history, item],\r\n  );\r\n\r\n  return <Button label={item.label} onClick={handleClick} />\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Note, RootState, VoidWithArgsFn } from '../../types';\r\nimport { convert2SelectOption } from './tools';\r\nimport Select from 'react-select';\r\nimport { NoteLinkButton } from '../NoteLinkButton';\r\n\r\n\r\ninterface NoteInputProps {\r\n  onChange: VoidWithArgsFn;\r\n  initialContent?: any;\r\n}\r\n\r\nexport const NoteLink = ({ onChange }: NoteInputProps) => {\r\n  const notes = useSelector<RootState, Note[]>((state) => state.note.notes || []);\r\n  const options = convert2SelectOption(notes);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const handleChange = (option: any) => {\r\n    setSelectedOption(option);\r\n    onChange(()=><NoteLinkButton noteId={option?.value as Note['id']}/>);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      defaultValue={selectedOption}\r\n      onChange={handleChange}\r\n      options={options}\r\n    />\r\n  );\r\n};\r\n","import { Note } from 'types';\r\n\r\nexport const convert2SelectOption = (data: Note[])=>{\r\n  return data.map((note => {\r\n    return { value: note.id, label: note.title };\r\n  }));\r\n}\r\n\r\nexport const convertString2SelectOption = (data: string[])=>{\r\n  return data.map((item => {\r\n    return { value: item, label: String(item).toLowerCase() };\r\n  }));\r\n}\r\n","import React, { ReactElement } from 'react';\r\n\r\nimport './index.css';\r\n\r\n// интерфейс для пропсов\r\ninterface ModalProps {\r\n  visible: boolean;\r\n  title: string;\r\n  children:ReactElement;\r\n  footer?: ReactElement | string;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const Modal = ({\r\n                        visible = false,\r\n                        title = '',\r\n                        footer = '',\r\n                        onClose,\r\n                        children\r\n                      }: ModalProps) => {\r\n  const onKeydown = ({ key }: KeyboardEvent) => {\r\n    switch (key) {\r\n      case 'Escape':\r\n        onClose();\r\n        break;\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener('keydown', onKeydown);\r\n    return () => document.removeEventListener('keydown', onKeydown);\r\n  });\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <div className='modal' onClick={onClose}>\r\n      <div className='modal-dialog' onClick={e => e.stopPropagation()}>\r\n        <div className='modal-header'>\r\n          <h3 className='modal-title'>{title}</h3>\r\n          <span className='modal-close' onClick={onClose}>\r\n            &times;\r\n          </span>\r\n        </div>\r\n        <div className='modal-body'>\r\n          <div className='modal-content'>{children}</div>\r\n        </div>\r\n        {footer && <div className='modal-footer'>{footer}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\n\r\nimport '../Header/header.css';\r\nimport { Link} from 'components/Link';\r\nimport { VoidWithArgsFn } from '../../types';\r\n\r\ninterface VideoInputProps {\r\n  onChange: VoidWithArgsFn;\r\n  initialContent?: any;\r\n}\r\n\r\n\r\nexport const VideoInput = ({ onChange, initialContent }: VideoInputProps) => {\r\n// TODO: add spinner and validator\r\n  return (\r\n      <Link onChange={onChange} initialContent={initialContent}/>\r\n  );\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { VoidWithArgsFn } from '../../types';\r\n\r\ntype EditorProps = {\r\n  onChange: VoidWithArgsFn;\r\n  initialContent?: any;\r\n}\r\n\r\nexport const TextEditor = ({ onChange, initialContent }: EditorProps) => {\r\n  const editorRef = useRef({});\r\n  const [content, setContent] = useState<string>(initialContent);\r\n\r\n  const handleChange = (evt: any, editor: any) => {\r\n    setContent(editor.getContent());\r\n    onChange(content);\r\n  };\r\n\r\n  return (\r\n    <Editor\r\n      onInit={(evt, editor) => editorRef.current = editor}\r\n      initialValue={content}\r\n      onChange={handleChange}\r\n      init={{\r\n        height: 500,\r\n        menubar: false,\r\n        plugins: [\r\n          'advlist autolink lists link image charmap print preview anchor',\r\n          'searchreplace visualblocks code fullscreen',\r\n          'insertdatetime media paste code help wordcount',\r\n        ],\r\n        toolbar: 'formatselect | bold italic backcolor | alignleft ' +\r\n          'aligncenter alignright alignjustify | bullist numlist outdent ' +\r\n          'indent | removeformat | help',\r\n        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { VoidWithArgsFn } from '../../types';\r\n\r\ntype EditorProps = {\r\n  onChange: VoidWithArgsFn;\r\n  initialContent: any;\r\n}\r\nexport const TableEditor = ({ onChange, initialContent }: EditorProps) => {\r\n  const editorRef = useRef({});\r\n  const [content, setContent] = useState<string>(initialContent);\r\n\r\n  const handleChange = (evt: any, editor: any) => {\r\n    setContent(editor.getContent());\r\n    onChange(content);\r\n  };\r\n\r\n  return (\r\n      <Editor\r\n        onInit={(evt, editor) => editorRef.current = editor}\r\n        initialValue='<p>This is the initial content of the editor.</p>'\r\n        onChange={handleChange}\r\n        init={{\r\n          height: 500,\r\n          menubar: 'table',\r\n          plugins: [\r\n            'table',\r\n          ],\r\n          toolbar: 'bold italic backcolor | table tabledelete | tableprops ' +\r\n            'tablerowprops tablecellprops | tableinsertrowbefore ' +\r\n            'tableinsertrowafter tabledeleterow | tableinsertcolbefore ' +\r\n            'tableinsertcolafter tabledeletecol',\r\n          content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\r\n        }}\r\n      />\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { Note, VoidWithArgsFn } from 'types';\r\nimport cuid from 'cuid';\r\n\r\ntype NoteFormProps = {\r\n  onFinish: VoidWithArgsFn;\r\n  initialData?: Note;\r\n  sectionId?: string;\r\n}\r\nexport const NoteForm = ({ onFinish, initialData, sectionId = '0' }: NoteFormProps) => {\r\n  const [title, setTitle] = useState(initialData?.title ?? '');\r\n  const [uri, setUri] = useState(initialData?.uri);\r\n\r\n  function handleFormSubmit(e: any) {\r\n    e.preventDefault();\r\n    // TODO: replace section id\r\n    onFinish({ title, uri, id: initialData?.id ?? cuid(), sectionId: sectionId });\r\n  }\r\n\r\n  return <form onSubmit={handleFormSubmit}>\r\n    <div>Title:</div>\r\n    <input\r\n      type='text'\r\n      name='title'\r\n      required\r\n      onChange={(e) => setTitle(e.target.value)}\r\n    />\r\n    <div>URI:</div>\r\n    <input\r\n      type='text'\r\n      name='uri'\r\n      onChange={(e) => setUri(e.target.value)}\r\n    />\r\n    <button type='submit'>Add</button>\r\n  </form>;\r\n};\r\n\r\n","import { useHistory } from 'react-router-dom';\r\nimport { EDIT_NOTE, Note, RootState, VoidFn } from 'types';\r\nimport { Modal } from 'components';\r\nimport { NoteForm } from 'forms/NoteForm';\r\nimport { getNoteUrl } from 'tools';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { create, update } from '../../../../store/actions/note';\r\nimport { deactivateAll } from '../../../../store/actions/ui';\r\n\r\ntype NoteProps = {\r\n  visible: boolean,\r\n  onClose: VoidFn;\r\n  initialData?: Note;\r\n  sectionId?: string;\r\n}\r\n\r\nexport const NoteEdit = ({ visible, onClose, initialData, sectionId = '0' }: NoteProps) => {\r\n  const isEditFlow = useSelector<RootState, string[]>((state) => state.ui.flows.filter((flow) => flow === EDIT_NOTE)).length > 0;\r\n\r\n  const isEdit = !!initialData?.id && isEditFlow;\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleFinish = (note: Note) => {\r\n    if (isEdit) {\r\n      dispatch(update(note));\r\n    } else {\r\n      dispatch(create(note));\r\n    }\r\n    dispatch(deactivateAll());\r\n    history.push(`/note/${getNoteUrl(note)}`);\r\n  };\r\n\r\n  return <Modal visible={visible} title={isEdit ? 'Edit note' : 'Create new note'} onClose={onClose}>\r\n    <NoteForm initialData={isEdit ? initialData : undefined} onFinish={handleFinish} sectionId={sectionId} />\r\n  </Modal>;\r\n};\r\n","import { Block } from 'types';\r\n\r\nimport styles from './BlockView.module.scss'\r\n\r\ntype BlockProps = {\r\n    block: Block;\r\n}\r\n\r\nexport const BlockView = ({block}: BlockProps) => {\r\n\r\n\r\n  return <div className={styles.block}>\r\n    <div>\r\n      {block.content}\r\n    </div>\r\n  </div>\r\n};\r\n","import { MediaType, VoidWithArgsFn } from 'types';\r\nimport { ImageInput, NoteLink, TableEditor, TextEditor, VideoInput } from 'components';\r\n\r\ntype SwitcherProps = {\r\n  type: MediaType;\r\n  onChange: VoidWithArgsFn;\r\n  initialContent?: any;\r\n}\r\n\r\nexport const Switcher = ({ type, onChange, initialContent }: SwitcherProps) => {\r\n  const handleChange = (event: any) => {\r\n    onChange(event?.target?.value ?? event);\r\n  };\r\n\r\n  switch (type) {\r\n    case 'IMAGE':\r\n      return <ImageInput onChange={handleChange} initialContent={initialContent} />;\r\n    case 'LINK':\r\n      return <NoteLink onChange={handleChange} initialContent={initialContent}/>;\r\n    case 'TEXT':\r\n      return <TextEditor onChange={handleChange} initialContent={initialContent}/>;\r\n    case 'TABLE':\r\n      return <TableEditor onChange={handleChange} initialContent={initialContent}/>;\r\n    case 'VIDEO':\r\n      return <VideoInput onChange={handleChange} initialContent={initialContent}/>;\r\n  }\r\n};\r\n","import { useState } from 'react';\r\nimport { MediaType, Block, VoidWithArgsFn } from 'types';\r\nimport { Switcher } from './components';\r\n\r\ntype BlockFormProps = {\r\n  type: MediaType;\r\n  onFinish: VoidWithArgsFn;\r\n  initialData?: Block;\r\n}\r\nexport const BlockForm = ({ type, onFinish, initialData }: BlockFormProps) => {\r\n  const [content, setContent] = useState(initialData?.content ?? '');\r\n\r\n  function handleFormSubmit(e: any) {\r\n    e.preventDefault();\r\n    // TODO: replace order\r\n    onFinish(content);\r\n  }\r\n\r\n  return <form onSubmit={handleFormSubmit}>\r\n    <Switcher type={type} onChange={setContent} initialContent={content} />\r\n    <button type='submit'>{initialData?.id ? 'Save' : 'Add'}</button>\r\n  </form>;\r\n};\r\n\r\n","import Select from 'react-select';\r\nimport { convertString2SelectOption } from 'components/NoteLink/tools';\r\nimport { VoidWithArgsFn } from 'types';\r\n\r\nconst TYPES = ['VIDEO', 'LINK', 'TEXT', 'IMAGE', 'TABLE'];\r\n\r\ninterface TypeInputProps {\r\n  onChange: VoidWithArgsFn;\r\n  defaultValue: string;\r\n}\r\n\r\ntype Option = {\r\n  value: any;\r\n  label: string;\r\n}\r\n\r\nexport const TypeSwitcher = ({ onChange, defaultValue }: TypeInputProps) => {\r\n  const options = convertString2SelectOption(TYPES);\r\n  const initial = { value: defaultValue, label: String(defaultValue).toLowerCase() };\r\n\r\n  const handleChange = (option: any) => {\r\n    onChange((option as Option).value);\r\n  };\r\n\r\n  return <Select defaultValue={initial} onChange={handleChange} options={options} />;\r\n};\r\n","export const CREATE_BLOCK = 'CREATE_BLOCK';\r\nexport const UPDATE_BLOCK = 'UPDATE_BLOCK';\r\nexport const DELETE_BLOCK = 'DELETE_BLOCK';\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BlockView } from './components';\r\nimport { Block, MediaType, Note, RootState } from 'types';\r\nimport { BlockForm } from 'forms/BlockForm';\r\nimport { TypeSwitcher } from './components/TypeSwitcher/TypeSwitcher';\r\nimport { Button } from 'components';\r\nimport { create, remove, update } from 'store/actions/block';\r\nimport cuid from 'cuid';\r\n\r\ntype NoteProps = {\r\n  noteId: Note['id'];\r\n}\r\n\r\nexport const NoteView = ({ noteId }: NoteProps) => {\r\n  const blocks = useSelector<RootState, Block[]>((state) => state.block.blocks.filter((item) => item.noteId === noteId));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [type, setType] = useState('TEXT');\r\n  const [isActiveBlockForm, setActive] = useState(false);\r\n  const [currentBlock, setBlock] = useState<Block>();\r\n\r\n  const showBlockForm = () => setActive(true);\r\n\r\n\r\n  const handleFinish = (content: string) => {\r\n    if (currentBlock?.id){\r\n      dispatch(update({ id: currentBlock.id, noteId: currentBlock.noteId, type: currentBlock.type as MediaType, content: content, order: 0 }));\r\n    }\r\n    else{\r\n      dispatch(create({ id: cuid(), noteId: noteId, type: type as MediaType, content: content, order: 0 }));\r\n    }\r\n    setActive(false);\r\n  };\r\n\r\n  const handleDelete = (id: Block['id']) => {\r\n    dispatch(remove(id))\r\n  };\r\n\r\n  const handleEdit = (block: Block) => {\r\n    setBlock(block);\r\n    showBlockForm();\r\n  }\r\n\r\n\r\n  return <>\r\n    <Button label={'Add new block'} onClick={showBlockForm} />\r\n    {isActiveBlockForm &&\r\n    (<>\r\n      <TypeSwitcher onChange={setType} defaultValue={type} />\r\n      <BlockForm type={type as MediaType} onFinish={handleFinish} initialData={currentBlock} />\r\n    </>)\r\n    }\r\n    {blocks.map((block) =>\r\n      <>\r\n        <BlockView block={block} />\r\n        <Button label={'Edit'} onClick={() => handleEdit(block)} />\r\n        <Button label={'Delete'} onClick={() => handleDelete(block.id)} />\r\n      </>)\r\n    }\r\n  </>;\r\n};\r\n","import { CREATE_BLOCK, UPDATE_BLOCK, DELETE_BLOCK } from '../types/block';\r\nimport { Block } from 'types';\r\n\r\nexport const create = (data: Block) => {\r\n  return {\r\n    type: CREATE_BLOCK,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const update = (data: Block) => {\r\n  return {\r\n    type: UPDATE_BLOCK,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const remove = (id: Block['id']) => {\r\n  return {\r\n    type: DELETE_BLOCK,\r\n    payload: id,\r\n  };\r\n};\r\n","import { useState } from 'react';\r\nimport { VoidWithArgsFn } from 'types';\r\nimport cuid from 'cuid';\r\n\r\ntype SectionFormProps = {\r\n  onFinish: VoidWithArgsFn;\r\n}\r\nexport const SectionForm = ({ onFinish }: SectionFormProps) => {\r\n  const [title, setTitle] = useState('');\r\n\r\n  function handleFormSubmit(e: any) {\r\n    e.preventDefault();\r\n    // TODO: replace section id\r\n    onFinish({ title, id: cuid()});\r\n    setTitle('')\r\n  }\r\n\r\n  return <form onSubmit={handleFormSubmit}>\r\n    <div>Title:</div>\r\n    <input\r\n      type='text'\r\n      name='title'\r\n      required\r\n      onChange={(e) => setTitle(e.target.value)}\r\n    />\r\n    <button type='submit'>Add</button>\r\n  </form>;\r\n};\r\n\r\n","export const CREATE_SECTION = 'CREATE_SECTION';\r\nexport const DELETE_SECTION = 'DELETE_SECTION';\r\n","import { useDispatch } from 'react-redux';\r\nimport { Section, VoidFn } from 'types';\r\nimport { Modal } from 'components';\r\nimport { SectionForm } from 'forms/SectionForm';\r\nimport { create } from 'store/actions/section';\r\n\r\ntype SectionProps = {\r\n  visible: boolean,\r\n  onClose: VoidFn;\r\n}\r\n\r\nexport const SectionCreate = ({ visible, onClose }: SectionProps) => {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleFinish = (section: Section) => {\r\n      dispatch(create(section));\r\n      onClose();\r\n  };\r\n\r\n  return <Modal visible={visible} title={'Create new section'} onClose={onClose}>\r\n    <SectionForm onFinish={handleFinish} />\r\n  </Modal>;\r\n};\r\n","import { CREATE_SECTION, DELETE_SECTION } from '../types/section';\r\nimport { Section } from 'types';\r\n\r\nexport const create = (data: Section) => {\r\n  return {\r\n    type: CREATE_SECTION,\r\n    payload: data,\r\n  };\r\n};\r\n\r\n\r\nexport const remove = (id: Section['id']) => {\r\n  return {\r\n    type: DELETE_SECTION,\r\n    payload: id,\r\n  };\r\n};\r\n","export const SectionView = ()=>{\r\n  return <div></div>\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { CREATE_NOTE, CREATE_SECTION, EDIT_NOTE, Note, RootState, Section } from 'types';\r\nimport { NoteEdit, NoteView } from './scenes';\r\nimport { deactivateAll } from '../../store/actions/ui';\r\nimport { SectionCreate } from './scenes/SectionCreate';\r\nimport { SectionView } from './scenes/SectionView';\r\n\r\n\r\nexport const Dashboard = () => {\r\n  const location = useLocation();\r\n  const path = location.pathname\r\n\r\n  let sectionId: Section['id'] = '';\r\n  let noteId: Note['id'] = '';\r\n\r\n  const checkSection = /section\\/(.+)/i.exec(path);\r\n\r\n  if (checkSection) {\r\n    sectionId = String(checkSection[1]);\r\n  }\r\n\r\n  const checkNote = /note\\/(.+)/i.exec(path);\r\n\r\n  if (checkNote) {\r\n    noteId = String(checkNote[1]);\r\n  }\r\n\r\n  const section  = useSelector<RootState, Section[]>((state) => state.section.sections.filter((section) => section.id === sectionId))[0];\r\n  const note = useSelector<RootState, Note[]>((state) => state.note.notes.filter((note) => note.id === noteId || note.uri === noteId))[0];\r\n\r\n  const flows = useSelector<RootState, string[]>((state) => state.ui.flows);\r\n\r\n  const isSectionFlowActive = flows.includes(CREATE_SECTION);\r\n  const isNoteFlowActive = flows.includes(CREATE_NOTE||EDIT_NOTE)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    dispatch(deactivateAll());\r\n  };\r\n\r\n  return <div>\r\n    {note?.id &&<NoteView noteId={note.id} />}\r\n    {section?.id && <SectionView /> }\r\n    <SectionCreate visible={isSectionFlowActive} onClose={handleClose} />\r\n    <NoteEdit visible={isNoteFlowActive} onClose={handleClose} initialData={note} sectionId={sectionId} />\r\n  </div>;\r\n};\r\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport {\n  Dashboard,\n} from './index';\nimport { Layout } from 'components';\n\nconst Main = () => {\n\n  return (\n    <>\n      <Layout>\n        <Switch>\n          <Route path='/' component={Dashboard} key='dashboard' />\n          <Redirect to='/dashboard' />\n        </Switch>\n      </Layout>\n    </>\n  );\n};\n\n\nexport const rootComp = () => {\n\n  return (\n    <Switch>\n      <Route component={Main} />\n    </Switch>\n  );\n};\n","import { UIState } from 'types';\r\nimport { ACTIVATE, DEACTIVATE, DEACTIVATE_ALL } from '../types/ui';\r\nimport { DefaultActionParams } from '../types';\r\n\r\nconst initialState = {\r\n  flows: [],\r\n};\r\n\r\nexport const uiReducer = (state: UIState = initialState, action: DefaultActionParams) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case ACTIVATE:\r\n      return { ...state, flows: [...state.flows, action.payload] };\r\n\r\n    case DEACTIVATE:\r\n      return { ...state, flows: [...state.flows.filter((flow: string) => flow !== action.payload)] };\r\n\r\n    case DEACTIVATE_ALL:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { CREATE_BLOCK, UPDATE_BLOCK, DELETE_BLOCK } from '../types/block';\r\nimport { DefaultActionParams } from '../types';\r\nimport { Block } from 'types';\r\n\r\nconst initialState = {\r\n  blocks: [],\r\n};\r\n\r\nexport const blockReducer =  (state = initialState, action: DefaultActionParams) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case CREATE_BLOCK:\r\n      return { ...state, blocks: [...state.blocks, {...action.payload}] };\r\n\r\n    case UPDATE_BLOCK:\r\n      return { ...state, blocks: [...state.blocks.filter((block: Block) => block.id !== action.payload.id), {...action.payload}] };\r\n\r\n    case DELETE_BLOCK:\r\n      return { ...state, blocks: [...state.blocks.filter((block: Block) => block.id !== action.payload)] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CREATE, UPDATE, DELETE } from '../types/note';\r\nimport { DefaultActionParams } from '../types';\r\nimport { Note } from 'types';\r\n\r\nconst initialState = {\r\n  notes: [],\r\n};\r\n\r\nexport const noteReducer =  (state = initialState, action: DefaultActionParams) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case CREATE:\r\n      return { ...state, notes: [...state.notes, {...action.payload}] };\r\n\r\n    case UPDATE:\r\n      return { ...state, notes: [...state.notes.filter((note: Note) => note.id !== action.payload.id), {...action.payload}] };\r\n\r\n    case DELETE:\r\n      return { ...state, notes: [...state.notes.filter((note: Note) => note.id !== action.payload)] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CREATE_SECTION, DELETE_SECTION } from '../types/section';\r\nimport { DefaultActionParams } from '../types';\r\nimport { Section } from 'types';\r\n\r\nconst initialState = {\r\n  sections: [{id: '0', title: 'other'}],\r\n};\r\n\r\nexport const sectionReducer =  (state = initialState, action: DefaultActionParams) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case CREATE_SECTION:\r\n      return { ...state, sections: [...state.sections, {...action.payload}] };\r\n\r\n\r\n    case DELETE_SECTION:\r\n      return { ...state, sections: [...state.sections.filter((section: Section) => section.id !== action.payload)] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { uiReducer } from './ui';\r\nimport { blockReducer } from './block';\r\nimport { noteReducer } from './note';\r\nimport { sectionReducer } from './section';\r\n\r\nexport * from './note';\r\nexport * from './block';\r\nexport * from './ui';\r\n\r\nexport const rootReducer = combineReducers({ note: noteReducer,\r\n  block: blockReducer, ui: uiReducer, section: sectionReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\nimport LocalStorage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport { rootReducer } from './reducers';\r\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\r\n\r\nexport const persistConfig = {\r\n  key: 'note',\r\n  storage: LocalStorage,\r\n  stateReconciler: hardSet,\r\n};\r\n\r\n// @ts-ignore\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  applyMiddleware(logger),\r\n);\r\n\r\n// @ts-ignore\r\nexport let persistor = persistStore(store);\r\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Log } from 'tools';\nimport { rootComp } from 'scenes/Root';\n\n//import 'assets/scss/App.scss';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistor, store } from './store/store';\n\nLog.logger = console;\n\n\nconst AppFn = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router>\n          {rootComp()}\n        </Router>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default AppFn;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}